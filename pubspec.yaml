name: app
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
# 下面这行代码可以防止使用 `flutter pub publish` 意外地将包发布到 pub.dev。这是私有包的首选设置。
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
# 下面定义应用程序的版本和构建号。
# 版本号是三个用点分隔的数字，比如 1.2.43，后面跟着一个用+分隔的可选构建号。
# 在 flutter 构建中，可以通过分别指定 --build-name 和 --build-number 来覆盖版本和构建器编号。
# 在 Android 中，build-name 用作 versionName，而 build-number 用作 versionCode。
# 阅读更多关于 Android 版本控制的信息，请访问 https://developer.android.com/studio/publish/versioning
# 在 iOS 中，build-name 被用作 CFBundleShortVersionString，而 build-number 被用作 CFBundleVersion。
# 阅读更多关于iOS版本控制的信息 https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# 在 Windows 中，build-name 用作产品和文件版本的主要、次要和补丁部分，而 build-number 用作构建后缀。
version: 1.0.0+1

environment:
  sdk: '>=3.1.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
# 依赖项指定了您的包工作所需的其他包。
# 要自动将软件包依赖项升级到最新版本，请考虑运行 `flutter pub upgrade --major-versions`。
# 或者，可以通过将下面的版本号更改为 pub.dev 上可用的最新版本来手动更新依赖项。
# 要查看哪些依赖项有较新的可用版本，请运行 `flutter pub outdated`。
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  # 下面的代码将Cupertino Icons字体添加到应用程序中。
  # 与 CupertinoIcons 类一起用于 iOS 样式图标。
  cupertino_icons: ^1.0.2

  # provider: ^6.0.3 # 状态管理 https://pub.dev/packages/provider
  # flutter_localizations:
  #   sdk: flutter # 多语言
  # yaml: ^3.1.1 # 多语言读取文本用到
  # crypto: ^3.0.1 # 密码学操作
  # bot_toast: ^4.0.3 # toast https://pub.dev/packages/bot_toast
  # flutter_slidable: ^2.0.0 # 列表元素侧滑 https://pub.dev/packages/flutter_slidable
  # flutter_easy_permission: ^1.1.2 # 方便请求权限 https://pub.dev/packages/flutter_easy_permission
#  flutter_scankit: ^1.2.4 # 扫描组件 https://pub.dev/packages/flutter_scankit 我猜是引用的华为的包的 arm64 和苹果的 arm64 冲突，总是失败，不用了
  # scan: ^1.6.0 # 扫描 只支持安卓和 ios https://pub.dev/packages/scan
  # images_picker: ^1.2.11 # 安卓和 ios 选择图片 https://pub.dev/packages/images_picker
  # file_picker: ^5.0.1 # 桌面版选择图片 https://pub.dev/packages/file_picker
#  flutter_barcode_sdk: ^2.0.3 # 实在找不到支持桌面版的库 没有 arm64 的，不搞了 https://pub.dev/packages/flutter_barcode_sdk
  # window_size: # 限制桌面版尺寸
  #   git:
  #     url: git@github.com:google/flutter-desktop-embedding.git
  #     path: plugins/window_size
  #     ref: f2d8aa3820fb87316516670bf4d51a74de8ac0dd
  # flutter_staggered_animations: ^1.1.1 # 列表加载动画 https://pub.dev/packages/flutter_staggered_animations
  # local_auth: ^2.1.2 # 请求生物识别 支持 ios 安卓 window10 https://pub.dev/packages/local_auth

#  passcode_screen: ^2.0.0 # 密码解锁 https://pub.dev/packages/passcode_screen
#  flutter_speed_dial: ^4.6.6 # 浮动按钮菜单 https://pub.dev/packages/flutter_speed_dial
#  animated_text_kit: ^4.2.1 # 文字动画 https://pub.dev/packages/animated_text_kit
#  percent_indicator: ^3.4.0 # 百分比指示器 https://pub.dev/packages/percent_indicator

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  # 下面的 "flutter_lints" 包包含一组推荐的lints，以鼓励良好的编码实践。
  # 包提供的检测集在位于包根目录中的 `analysis_options.yaml` 中被激活。
  # 有关停用特定lint规则和激活附加规则的信息，请参阅该文件。
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# 有关此文件的通用 Dart 部分的信息，请参阅以下页面 https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
# 以下部分是针对 Flutter 包的。
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  # 下面的代码确保了 Material Icons 字体包含在你的应用程序中，这样你就可以使用 Material Icons 类中的图标了。
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # 要向应用程序中添加资源，请添加 assets 部分，如下所示:
  assets:
    # language
    - assets/locales/en.yml
    - assets/locales/zh.yml
    - assets/locales/zh_TW.yml
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware
  # 图像资源可以引用一个或多个特定于分辨率的“变体”，请参阅 https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # 有关从包依赖项中添加资产的详细信息，请参见 https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # 若要向应用程序添加自定义字体，请在此处的 "flutter" 部分中添加字体部分。
  # 这个列表中的每个条目都应该有一个带有字体名称的 "family" 键，以及一个带有列表的 "fonts" 键，该列表给出了该字体的资源和其他描述符。
  # 例如:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  # 有关包依赖项中的字体的详细信息，请参见 https://flutter.dev/custom-fonts/#from-packages
